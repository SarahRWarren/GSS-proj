library(foreign)
read.dct <- function(dct, labels.included = "yes") {
temp <- readLines(dct)
temp <- temp[grepl("_column", temp)]
switch(labels.included,
yes = {
pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+)[a-z]\\s+(.*)"
classes <- c("numeric", "character", "character", "numeric", "character")
N <- 5
NAMES <- c("StartPos", "Str", "ColName", "ColWidth", "ColLabel")
},
no = {
pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+).*"
classes <- c("numeric", "character", "character", "numeric")
N <- 4
NAMES <- c("StartPos", "Str", "ColName", "ColWidth")
})
temp_metadata <- setNames(lapply(1:N, function(x) {
out <- gsub(pattern, paste("\\", x, sep = ""), temp)
out <- gsub("^\\s+|\\s+$", "", out)
out <- gsub('\"', "", out, fixed = TRUE)
class(out) <- classes[x] ; out }), NAMES)
temp_metadata[["ColName"]] <- make.names(gsub("\\s", "", temp_metadata[["ColName"]]))
temp_metadata
}
read.dat <- function(dat, metadata_var, labels.included = "yes") {
read.table(dat, col.names = metadata_var[["ColName"]])
}
GSS_metadata <- read.dct("GSS.dct")
GSS_ascii <- read.dat("GSS.dat", GSS_metadata)
attr(GSS_ascii, "col.label") <- GSS_metadata[["ColLabel"]]
GSS <- GSS_ascii
GSS_metadata <- read.dct("gss-health/resul/GSS.dct")
GSS_metadata <- read.dct("gss-health/resul/GSS.dct")
("gss-health/resul/GSS.dct")
GSS_metadata <- read.dct("gss-health/resul/GSS.dct")
GSS_metadata <- read.dct("gss-health/result/GSS.dct")
GSS_ascii <- read.dat("gss-health/result/GSS.dat", GSS_metadata)
GSS_metadata <- read.dct("gss-health/result/GSS.dct")
GSS_ascii <- read.dat("gss-health/result/GSS.dat", GSS_metadata)
attr(GSS_ascii, "col.label") <- GSS_metadata[["ColLabel"]]
GSS <- GSS_ascii
View(GSS)
view(GSS)
library(tidyverse)
view(GSS)
view(GSS)
GSS_metadata <- read.dct("gss-health/result/GSS.dct")
GSS_ascii <- read.dat("gss-health/result/GSS.dat", GSS_metadata)
attr(GSS_ascii, "col.label") <- GSS_metadata[["ColLabel"]]
GSS <- GSS_ascii
view(GSS)
write_rds(GSS, "gss-health/GSS-extract-clean.RDS")
`GSS-extract-clean` <- readRDS("~/PhD/Coursework/survey methods/GSS-proj/gss-health/GSS-extract-clean.RDS")
View(`GSS-extract-clean`)
